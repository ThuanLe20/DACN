#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAnChuyenNganh.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebYte")]
	public partial class dbYTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertInfoCart(InfoCart instance);
    partial void UpdateInfoCart(InfoCart instance);
    partial void DeleteInfoCart(InfoCart instance);
    partial void InsertMan(Man instance);
    partial void UpdateMan(Man instance);
    partial void DeleteMan(Man instance);
    #endregion
		
		public dbYTDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebYteConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbYTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbYTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbYTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbYTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<InfoBill> InfoBills
		{
			get
			{
				return this.GetTable<InfoBill>();
			}
		}
		
		public System.Data.Linq.Table<InfoCart> InfoCarts
		{
			get
			{
				return this.GetTable<InfoCart>();
			}
		}
		
		public System.Data.Linq.Table<Man> Mans
		{
			get
			{
				return this.GetTable<Man>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _useradmin;
		
		private string _passadmin;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseradminChanging(string value);
    partial void OnuseradminChanged();
    partial void OnpassadminChanging(string value);
    partial void OnpassadminChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useradmin", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string useradmin
		{
			get
			{
				return this._useradmin;
			}
			set
			{
				if ((this._useradmin != value))
				{
					this.OnuseradminChanging(value);
					this.SendPropertyChanging();
					this._useradmin = value;
					this.SendPropertyChanged("useradmin");
					this.OnuseradminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passadmin", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string passadmin
		{
			get
			{
				return this._passadmin;
			}
			set
			{
				if ((this._passadmin != value))
				{
					this.OnpassadminChanging(value);
					this.SendPropertyChanging();
					this._passadmin = value;
					this.SendPropertyChanged("passadmin");
					this.OnpassadminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idpro;
		
		private string _namepro;
		
		private double _price;
		
		private string _image;
		
		private string _description;
		
		private System.Nullable<int> _idcate;
		
		private System.Nullable<bool> _PStatus;
		
		private EntitySet<InfoCart> _InfoCarts;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidproChanging(int value);
    partial void OnidproChanged();
    partial void OnnameproChanging(string value);
    partial void OnnameproChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnidcateChanging(System.Nullable<int> value);
    partial void OnidcateChanged();
    partial void OnPStatusChanging(System.Nullable<bool> value);
    partial void OnPStatusChanged();
    #endregion
		
		public Product()
		{
			this._InfoCarts = new EntitySet<InfoCart>(new Action<InfoCart>(this.attach_InfoCarts), new Action<InfoCart>(this.detach_InfoCarts));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idpro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idpro
		{
			get
			{
				return this._idpro;
			}
			set
			{
				if ((this._idpro != value))
				{
					this.OnidproChanging(value);
					this.SendPropertyChanging();
					this._idpro = value;
					this.SendPropertyChanged("idpro");
					this.OnidproChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namepro", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string namepro
		{
			get
			{
				return this._namepro;
			}
			set
			{
				if ((this._namepro != value))
				{
					this.OnnameproChanging(value);
					this.SendPropertyChanging();
					this._namepro = value;
					this.SendPropertyChanged("namepro");
					this.OnnameproChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcate", DbType="Int")]
		public System.Nullable<int> idcate
		{
			get
			{
				return this._idcate;
			}
			set
			{
				if ((this._idcate != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcateChanging(value);
					this.SendPropertyChanging();
					this._idcate = value;
					this.SendPropertyChanged("idcate");
					this.OnidcateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PStatus", DbType="Bit")]
		public System.Nullable<bool> PStatus
		{
			get
			{
				return this._PStatus;
			}
			set
			{
				if ((this._PStatus != value))
				{
					this.OnPStatusChanging(value);
					this.SendPropertyChanging();
					this._PStatus = value;
					this.SendPropertyChanged("PStatus");
					this.OnPStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InfoCart", Storage="_InfoCarts", ThisKey="idpro", OtherKey="idpro")]
		public EntitySet<InfoCart> InfoCarts
		{
			get
			{
				return this._InfoCarts;
			}
			set
			{
				this._InfoCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="idcate", OtherKey="idcate", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._idcate = value.idcate;
					}
					else
					{
						this._idcate = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InfoCarts(InfoCart entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_InfoCarts(InfoCart entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idbill;
		
		private string _address;
		
		private string _note;
		
		private string _customername;
		
		private System.Nullable<System.DateTime> _datein;
		
		private System.Nullable<System.DateTime> _dateout;
		
		private string _phoneout;
		
		private string _status;
		
		private System.Nullable<int> _idcus;
		
		private EntityRef<Man> _Man;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidbillChanging(int value);
    partial void OnidbillChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OncustomernameChanging(string value);
    partial void OncustomernameChanged();
    partial void OndateinChanging(System.Nullable<System.DateTime> value);
    partial void OndateinChanged();
    partial void OndateoutChanging(System.Nullable<System.DateTime> value);
    partial void OndateoutChanged();
    partial void OnphoneoutChanging(string value);
    partial void OnphoneoutChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnidcusChanging(System.Nullable<int> value);
    partial void OnidcusChanged();
    #endregion
		
		public Bill()
		{
			this._Man = default(EntityRef<Man>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idbill", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idbill
		{
			get
			{
				return this._idbill;
			}
			set
			{
				if ((this._idbill != value))
				{
					this.OnidbillChanging(value);
					this.SendPropertyChanging();
					this._idbill = value;
					this.SendPropertyChanged("idbill");
					this.OnidbillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(100)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customername", DbType="NVarChar(100)")]
		public string customername
		{
			get
			{
				return this._customername;
			}
			set
			{
				if ((this._customername != value))
				{
					this.OncustomernameChanging(value);
					this.SendPropertyChanging();
					this._customername = value;
					this.SendPropertyChanged("customername");
					this.OncustomernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datein", DbType="DateTime")]
		public System.Nullable<System.DateTime> datein
		{
			get
			{
				return this._datein;
			}
			set
			{
				if ((this._datein != value))
				{
					this.OndateinChanging(value);
					this.SendPropertyChanging();
					this._datein = value;
					this.SendPropertyChanged("datein");
					this.OndateinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateout", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateout
		{
			get
			{
				return this._dateout;
			}
			set
			{
				if ((this._dateout != value))
				{
					this.OndateoutChanging(value);
					this.SendPropertyChanging();
					this._dateout = value;
					this.SendPropertyChanged("dateout");
					this.OndateoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneout", DbType="VarChar(100)")]
		public string phoneout
		{
			get
			{
				return this._phoneout;
			}
			set
			{
				if ((this._phoneout != value))
				{
					this.OnphoneoutChanging(value);
					this.SendPropertyChanging();
					this._phoneout = value;
					this.SendPropertyChanged("phoneout");
					this.OnphoneoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(100)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcus", DbType="Int")]
		public System.Nullable<int> idcus
		{
			get
			{
				return this._idcus;
			}
			set
			{
				if ((this._idcus != value))
				{
					if (this._Man.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcusChanging(value);
					this.SendPropertyChanging();
					this._idcus = value;
					this.SendPropertyChanged("idcus");
					this.OnidcusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Bill", Storage="_Man", ThisKey="idcus", OtherKey="idman", IsForeignKey=true)]
		public Man Man
		{
			get
			{
				return this._Man.Entity;
			}
			set
			{
				Man previousValue = this._Man.Entity;
				if (((previousValue != value) 
							|| (this._Man.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Man.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Man.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._idcus = value.idman;
					}
					else
					{
						this._idcus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Man");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcart;
		
		private double _totalprice;
		
		private int _idman;
		
		private EntitySet<InfoCart> _InfoCarts;
		
		private EntityRef<Man> _Man;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidcartChanging(int value);
    partial void OnidcartChanged();
    partial void OntotalpriceChanging(double value);
    partial void OntotalpriceChanged();
    partial void OnidmanChanging(int value);
    partial void OnidmanChanged();
    #endregion
		
		public Cart()
		{
			this._InfoCarts = new EntitySet<InfoCart>(new Action<InfoCart>(this.attach_InfoCarts), new Action<InfoCart>(this.detach_InfoCarts));
			this._Man = default(EntityRef<Man>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcart", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idcart
		{
			get
			{
				return this._idcart;
			}
			set
			{
				if ((this._idcart != value))
				{
					this.OnidcartChanging(value);
					this.SendPropertyChanging();
					this._idcart = value;
					this.SendPropertyChanged("idcart");
					this.OnidcartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalprice", DbType="Float NOT NULL")]
		public double totalprice
		{
			get
			{
				return this._totalprice;
			}
			set
			{
				if ((this._totalprice != value))
				{
					this.OntotalpriceChanging(value);
					this.SendPropertyChanging();
					this._totalprice = value;
					this.SendPropertyChanged("totalprice");
					this.OntotalpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idman", DbType="Int NOT NULL")]
		public int idman
		{
			get
			{
				return this._idman;
			}
			set
			{
				if ((this._idman != value))
				{
					if (this._Man.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidmanChanging(value);
					this.SendPropertyChanging();
					this._idman = value;
					this.SendPropertyChanged("idman");
					this.OnidmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_InfoCart", Storage="_InfoCarts", ThisKey="idcart", OtherKey="idcart")]
		public EntitySet<InfoCart> InfoCarts
		{
			get
			{
				return this._InfoCarts;
			}
			set
			{
				this._InfoCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Cart", Storage="_Man", ThisKey="idman", OtherKey="idman", IsForeignKey=true)]
		public Man Man
		{
			get
			{
				return this._Man.Entity;
			}
			set
			{
				Man previousValue = this._Man.Entity;
				if (((previousValue != value) 
							|| (this._Man.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Man.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Man.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._idman = value.idman;
					}
					else
					{
						this._idman = default(int);
					}
					this.SendPropertyChanged("Man");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InfoCarts(InfoCart entity)
		{
			this.SendPropertyChanging();
			entity.Cart = this;
		}
		
		private void detach_InfoCarts(InfoCart entity)
		{
			this.SendPropertyChanging();
			entity.Cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcate;
		
		private string _name;
		
		private System.Nullable<bool> _CStatus;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidcateChanging(int value);
    partial void OnidcateChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnCStatusChanging(System.Nullable<bool> value);
    partial void OnCStatusChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcate", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idcate
		{
			get
			{
				return this._idcate;
			}
			set
			{
				if ((this._idcate != value))
				{
					this.OnidcateChanging(value);
					this.SendPropertyChanging();
					this._idcate = value;
					this.SendPropertyChanged("idcate");
					this.OnidcateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CStatus", DbType="Bit")]
		public System.Nullable<bool> CStatus
		{
			get
			{
				return this._CStatus;
			}
			set
			{
				if ((this._CStatus != value))
				{
					this.OnCStatusChanging(value);
					this.SendPropertyChanging();
					this._CStatus = value;
					this.SendPropertyChanged("CStatus");
					this.OnCStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="idcate", OtherKey="idcate")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcon;
		
		private string _emailcon;
		
		private System.Nullable<System.DateTime> _datein;
		
		private System.Nullable<System.DateTime> _dateout;
		
		private string _textin;
		
		private string _textout;
		
		private string _status;
		
		private int _idman;
		
		private EntityRef<Man> _Man;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidconChanging(int value);
    partial void OnidconChanged();
    partial void OnemailconChanging(string value);
    partial void OnemailconChanged();
    partial void OndateinChanging(System.Nullable<System.DateTime> value);
    partial void OndateinChanged();
    partial void OndateoutChanging(System.Nullable<System.DateTime> value);
    partial void OndateoutChanged();
    partial void OntextinChanging(string value);
    partial void OntextinChanged();
    partial void OntextoutChanging(string value);
    partial void OntextoutChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnidmanChanging(int value);
    partial void OnidmanChanged();
    #endregion
		
		public Contact()
		{
			this._Man = default(EntityRef<Man>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idcon
		{
			get
			{
				return this._idcon;
			}
			set
			{
				if ((this._idcon != value))
				{
					this.OnidconChanging(value);
					this.SendPropertyChanging();
					this._idcon = value;
					this.SendPropertyChanged("idcon");
					this.OnidconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailcon", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string emailcon
		{
			get
			{
				return this._emailcon;
			}
			set
			{
				if ((this._emailcon != value))
				{
					this.OnemailconChanging(value);
					this.SendPropertyChanging();
					this._emailcon = value;
					this.SendPropertyChanged("emailcon");
					this.OnemailconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datein", DbType="DateTime")]
		public System.Nullable<System.DateTime> datein
		{
			get
			{
				return this._datein;
			}
			set
			{
				if ((this._datein != value))
				{
					this.OndateinChanging(value);
					this.SendPropertyChanging();
					this._datein = value;
					this.SendPropertyChanged("datein");
					this.OndateinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateout", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateout
		{
			get
			{
				return this._dateout;
			}
			set
			{
				if ((this._dateout != value))
				{
					this.OndateoutChanging(value);
					this.SendPropertyChanging();
					this._dateout = value;
					this.SendPropertyChanged("dateout");
					this.OndateoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textin", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string textin
		{
			get
			{
				return this._textin;
			}
			set
			{
				if ((this._textin != value))
				{
					this.OntextinChanging(value);
					this.SendPropertyChanging();
					this._textin = value;
					this.SendPropertyChanged("textin");
					this.OntextinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textout", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string textout
		{
			get
			{
				return this._textout;
			}
			set
			{
				if ((this._textout != value))
				{
					this.OntextoutChanging(value);
					this.SendPropertyChanging();
					this._textout = value;
					this.SendPropertyChanged("textout");
					this.OntextoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idman", DbType="Int NOT NULL")]
		public int idman
		{
			get
			{
				return this._idman;
			}
			set
			{
				if ((this._idman != value))
				{
					if (this._Man.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidmanChanging(value);
					this.SendPropertyChanging();
					this._idman = value;
					this.SendPropertyChanged("idman");
					this.OnidmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Contact", Storage="_Man", ThisKey="idman", OtherKey="idman", IsForeignKey=true)]
		public Man Man
		{
			get
			{
				return this._Man.Entity;
			}
			set
			{
				Man previousValue = this._Man.Entity;
				if (((previousValue != value) 
							|| (this._Man.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Man.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Man.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._idman = value.idman;
					}
					else
					{
						this._idman = default(int);
					}
					this.SendPropertyChanged("Man");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfoBill")]
	public partial class InfoBill
	{
		
		private System.Nullable<double> _price;
		
		private int _idpro;
		
		private int _idbill;
		
		private System.Nullable<int> _count;
		
		public InfoBill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idpro", DbType="Int NOT NULL")]
		public int idpro
		{
			get
			{
				return this._idpro;
			}
			set
			{
				if ((this._idpro != value))
				{
					this._idpro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idbill", DbType="Int NOT NULL")]
		public int idbill
		{
			get
			{
				return this._idbill;
			}
			set
			{
				if ((this._idbill != value))
				{
					this._idbill = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfoCart")]
	public partial class InfoCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idifc;
		
		private int _amount;
		
		private int _idcart;
		
		private int _idpro;
		
		private EntityRef<Cart> _Cart;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidifcChanging(int value);
    partial void OnidifcChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnidcartChanging(int value);
    partial void OnidcartChanged();
    partial void OnidproChanging(int value);
    partial void OnidproChanged();
    #endregion
		
		public InfoCart()
		{
			this._Cart = default(EntityRef<Cart>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idifc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idifc
		{
			get
			{
				return this._idifc;
			}
			set
			{
				if ((this._idifc != value))
				{
					this.OnidifcChanging(value);
					this.SendPropertyChanging();
					this._idifc = value;
					this.SendPropertyChanged("idifc");
					this.OnidifcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcart", DbType="Int NOT NULL")]
		public int idcart
		{
			get
			{
				return this._idcart;
			}
			set
			{
				if ((this._idcart != value))
				{
					if (this._Cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcartChanging(value);
					this.SendPropertyChanging();
					this._idcart = value;
					this.SendPropertyChanged("idcart");
					this.OnidcartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idpro", DbType="Int NOT NULL")]
		public int idpro
		{
			get
			{
				return this._idpro;
			}
			set
			{
				if ((this._idpro != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidproChanging(value);
					this.SendPropertyChanging();
					this._idpro = value;
					this.SendPropertyChanged("idpro");
					this.OnidproChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_InfoCart", Storage="_Cart", ThisKey="idcart", OtherKey="idcart", IsForeignKey=true)]
		public Cart Cart
		{
			get
			{
				return this._Cart.Entity;
			}
			set
			{
				Cart previousValue = this._Cart.Entity;
				if (((previousValue != value) 
							|| (this._Cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cart.Entity = null;
						previousValue.InfoCarts.Remove(this);
					}
					this._Cart.Entity = value;
					if ((value != null))
					{
						value.InfoCarts.Add(this);
						this._idcart = value.idcart;
					}
					else
					{
						this._idcart = default(int);
					}
					this.SendPropertyChanged("Cart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InfoCart", Storage="_Product", ThisKey="idpro", OtherKey="idpro", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.InfoCarts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.InfoCarts.Add(this);
						this._idpro = value.idpro;
					}
					else
					{
						this._idpro = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Man")]
	public partial class Man : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idman;
		
		private string _name;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _phone;
		
		private string _address;
		
		private System.Nullable<System.DateTime> _birth;
		
		private System.Nullable<int> _role;
		
		private EntitySet<Bill> _Bills;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Contact> _Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidmanChanging(int value);
    partial void OnidmanChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnbirthChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthChanged();
    partial void OnroleChanging(System.Nullable<int> value);
    partial void OnroleChanged();
    #endregion
		
		public Man()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idman", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idman
		{
			get
			{
				return this._idman;
			}
			set
			{
				if ((this._idman != value))
				{
					this.OnidmanChanging(value);
					this.SendPropertyChanging();
					this._idman = value;
					this.SendPropertyChanged("idman");
					this.OnidmanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> birth
		{
			get
			{
				return this._birth;
			}
			set
			{
				if ((this._birth != value))
				{
					this.OnbirthChanging(value);
					this.SendPropertyChanging();
					this._birth = value;
					this.SendPropertyChanged("birth");
					this.OnbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int")]
		public System.Nullable<int> role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Bill", Storage="_Bills", ThisKey="idman", OtherKey="idcus")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Cart", Storage="_Carts", ThisKey="idman", OtherKey="idman")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Man_Contact", Storage="_Contacts", ThisKey="idman", OtherKey="idman")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Man = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Man = null;
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Man = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Man = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Man = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Man = null;
		}
	}
}
#pragma warning restore 1591
